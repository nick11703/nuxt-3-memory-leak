name: Deploy PR for Validation

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: PR number for testing
        required: true
        type: number
      env_to_use:
        description: Environment
        required: true
        type: choice
        options:
          - dev1
          - dev2
      jira_ticket:
        description: JIRA Ticket ID
        required: true
        type: string
env:
  SERVER_ARTIFACT_NAME: app-server-${{ inputs.pr_number }} 

permissions:
  pull-requests: write

jobs:
  Deployment:
    if: github.ref_name == github.event.repository.default_branch
    runs-on: ubuntu-latest
    steps:
    - name: 'Download artifact'
      uses: actions/github-script@v6
      with:
        script: |
          let allArtifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "${{ env.SERVER_ARTIFACT_NAME }}",
          });
          let matchArtifact = allArtifacts.data.artifacts[0];
          let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
          });
          let fs = require('fs');
          fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/${{ env.SERVER_ARTIFACT_NAME }}.zip`, Buffer.from(download.data));
    - name: Save App Client Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.SERVER_ARTIFACT_NAME }}.zip
        path: ${{ env.SERVER_ARTIFACT_NAME }}.zip
        if-no-files-found: error
    # - name: 'Unzip artifact'
    #   run: unzip app-server.zip

    # - name: 'Comment on PR'
    #   uses: actions/github-script@v6
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     script: |
    #       let fs = require('fs');
    #       let issue_number = ${{ inputs.pr_number }};
    #       await github.rest.issues.createComment({
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         issue_number: issue_number,
    #         body: 'Thank you for the PR!'
    #       });
